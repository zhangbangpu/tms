<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.chinaway.tms</groupId>
	<artifactId>tms</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>
	<modules>
		<module>tms.server</module>
		<module>tms.web</module>
		<module>tms.core</module>
	</modules>
	
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<tms.version>0.0.1-SNAPSHOT</tms.version>
		<spring.version>5.2.22.RELEASE</spring.version>
		<!-- <mybatis.version>3.3.1</mybatis.version> -->
		<mybatis.version>3.2.8</mybatis.version>
		<mysql.version>5.1.38</mysql.version>
		<!-- spring aop需要aspectjrt.jar -->
		<aspectj.version>1.8.6</aspectj.version>
		<log4j.version>1.2.17</log4j.version>
		<slf4j.version>1.7.21</slf4j.version>
		<!-- <jackson.version>2.6.3</jackson.version> -->
		<fastjson.version>1.2.7</fastjson.version>
		<quartz.version>2.2.2</quartz.version>
		<cxf.version>3.1.7</cxf.version>
		<poi.version>3.12</poi.version>
		<jxl.version>2.6.12</jxl.version>
		<redisson.version>2.2.13</redisson.version>
		<freemarker.version>2.3.23</freemarker.version>
		<httpclient.version>4.5.2</httpclient.version>
		<junit.version>4.11</junit.version>
	</properties>
	
	<!-- dependencyManagement表示子模块能继承的依赖配置，需要使用那些自己手动配置 -->
	<dependencyManagement>
		<dependencies>
		  	<dependency>
				<groupId>com.chinaway.tms</groupId>
    			<artifactId>tms.web</artifactId>
				<version>${tms.version}</version>
			</dependency>
		  	<dependency>
				<groupId>com.chinaway.tms</groupId>
    			<artifactId>tms.server</artifactId>
				<version>${tms.version}</version>
			</dependency>
		  	<dependency>
				<groupId>com.chinaway.tms</groupId>
    			<artifactId>tms.core</artifactId>
				<version>${tms.version}</version>
			</dependency>
			
			<dependency>
	            <groupId>org.apache.httpcomponents</groupId>
	            <artifactId>httpclient</artifactId>
	            <version>${httpclient.version}</version>
	        </dependency>
			<dependency>
			    <groupId>org.freemarker</groupId>
			    <artifactId>freemarker</artifactId>
			    <version>${freemarker.version}</version>
			</dependency>
	
			<!-- 添加cxf（soap webservice） -->
			<dependency>
			    <groupId>org.apache.cxf</groupId>
			    <artifactId>cxf-rt-frontend-jaxws</artifactId>
			    <version>${cxf.version}</version>
			</dependency>
			<dependency>
			    <groupId>org.apache.cxf</groupId>
			    <artifactId>cxf-rt-transports-http</artifactId>
			    <version>${cxf.version}</version>
			</dependency>
				
		  	<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${spring.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context-support</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-beans</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jdbc</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aop</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aspects</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-tx</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-orm</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<!-- spring-webmvc依赖于spring-web,但是避免出现依赖问题还是显示申明比较好 -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-web</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-webmvc</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jms</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-expression</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<!-- spring aop需要aspectjrt.jar,aspectjweaver.jar(自动添加了) -->
			<dependency>
			    <groupId>org.aspectj</groupId>  
			    <artifactId>aspectjrt</artifactId>  
			    <version>${aspectj.version}</version>  
			</dependency>
			
			<!-- 添加定时器与spring整合 -->
			<dependency>
		        <groupId>org.quartz-scheduler</groupId>
		        <artifactId>quartz</artifactId>
		        <version>${quartz.version}</version>
		    </dependency>

			<dependency>
				<groupId>org.quartz-scheduler</groupId>
				<artifactId>quartz-jobs</artifactId>
				<version>${quartz.version}</version>
			</dependency>
		    
		    <!-- 添加mybatis -->
		    <dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis</artifactId>
				<version>${mybatis.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis-spring</artifactId>
				<version>1.2.2</version>
			</dependency>
			
			<!-- 数据库驱动包 -->
			<!-- <dependency>  
			    <groupId>com.oracle</groupId>  
			    <artifactId>ojdbc14</artifactId>  
			    <version>10.2.0.4.0</version>  
			</dependency>  
			<dependency>
				<groupId>com.oracle</groupId>
				<artifactId>ojdbc6</artifactId>
				<version>11.2.0.1.0</version>
			</dependency> -->
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>${mysql.version}</version>
			</dependency>
		  
			<!-- dbcp连接池需要的jar -->
			<dependency>
				<groupId>commons-dbcp</groupId>
				<artifactId>commons-dbcp</artifactId>
				<version>1.4</version>
			</dependency>
			<!-- commons-dbcp依赖于commons-pool -->
			<dependency>
				<groupId>commons-pool</groupId>
				<artifactId>commons-pool</artifactId>
				<version>1.6</version>
			</dependency>
			<dependency>
				<groupId>commons-collections</groupId>
				<artifactId>commons-collections</artifactId>
				<version>3.2.1</version>
			</dependency>
			<!-- apache commom(开始) -->	
			<!-- 文件上传 -->
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>2.4</version>
			</dependency>
			<dependency>
				<groupId>commons-fileupload</groupId>
				<artifactId>commons-fileupload</artifactId>
				<version>1.2.2</version>
			</dependency>
			<!-- java.lang包的扩展 -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>3.4</version>
			</dependency>
			<dependency>
				<groupId>commons-codec</groupId>
				<artifactId>commons-codec</artifactId>
				<version>1.10</version>
			</dependency>
			<dependency>
			    <groupId>commons-beanutils</groupId>
			    <artifactId>commons-beanutils</artifactId>
			    <version>1.9.2</version>
			</dependency>
		<!-- apache commom(结束) -->	
			
			<dependency>
			    <groupId>org.slf4j</groupId>
			    <artifactId>slf4j-log4j12</artifactId>
			    <version>${slf4j.version}</version>
			</dependency>
			<dependency>
		        <groupId>log4j</groupId>
		        <artifactId>log4j</artifactId>
		        <version>${log4j.version}</version>
		    </dependency>
		    
			<!-- 阿里巴巴的FastJson -->
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>fastjson</artifactId>
				<version>${fastjson.version}</version>
			</dependency>
			
			<!-- <dependency>
				<groupId>org.redisson</groupId>
				<artifactId>redisson</artifactId>
				<version>${redisson.version}</version>
			</dependency> -->
			
			<!--spring3.x的配置
			<dependency>
				<groupId>org.codehaus.jackson</groupId>
				<artifactId>jackson-core-asl</artifactId>
				<version>1.9.11</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.jackson</groupId>
				<artifactId>jackson-mapper-asl</artifactId>
				<version>1.9.11</version>
			</dependency>
			-->
			<!--spring4.x的配置
			<dependency>
			    <groupId>com.fasterxml.jackson.core</groupId>
			    <artifactId>jackson-databind</artifactId>
			    <version>${jackson.version}</version>
			</dependency>
			 jackson-databind依赖于jackson-core
			<dependency>
			    <groupId>com.fasterxml.jackson.core</groupId>
			    <artifactId>jackson-core</artifactId>
			    <version>${jackson.version}</version>
			</dependency> -->
		
		    <!--其实不引入poi而是引入poi-ooxml就会自动引入操作xlsx文件所用到的其他包  -->
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi-ooxml</artifactId>
				<version>${poi.version}</version>
			</dependency>
			<dependency>
				<groupId>net.sourceforge.jexcelapi</groupId>
				<artifactId>jxl</artifactId>
				<version>${jxl.version}</version>
			</dependency>
		    
		    <!-- 添加Servlet,需要添加 scope,避免出现cannot be cast to javax.servlet.Servlet -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>3.1.0</version>
				<scope>provided</scope>
			</dependency>
			
		    <!-- 添加jstl功能-->
		    <dependency>
		    	<groupId>javax.servlet</groupId>
		    	<artifactId>jstl</artifactId>
		    	<version>1.2</version>
		    </dependency>
		    <dependency>
				<groupId>taglibs</groupId>
				<artifactId>standard</artifactId>
				<version>1.1.2</version>
			</dependency>
		    <!-- 添加javaEE功能 -->
		    <dependency>
			    <groupId>javax</groupId>
			    <artifactId>javaee-api</artifactId>
			    <version>7.0</version>
			    <scope>provided</scope>
			</dependency>
		    <dependency>
		    	<groupId>javax.faces</groupId>
		    	<artifactId>jsf-api</artifactId>
		    	<version>1.2_04</version>
		    	<scope>provided</scope>
		    </dependency>
		    <dependency>
		    	<groupId>javax.servlet.jsp</groupId>
		    	<artifactId>jsp-api</artifactId>
		    	<version>2.1</version>
		    	<scope>provided</scope>
		    </dependency>
		    <dependency>
		    	<groupId>javax.faces</groupId>
		    	<artifactId>jsf-impl</artifactId>
		    	<version>1.2_04</version>
		    	<scope>provided</scope>
		    </dependency>
 
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
			
			<!-- 配置tools，是因为实际中发现，其他开发人员从svn上check out工程以后，
				有的人会报错，找不到tools.jar，这样配置以后就好了 -->
			<dependency>
				<groupId>com.sun</groupId>  
                <artifactId>tools</artifactId>
                <version>1.7</version>
                <scope>system</scope>
                <systemPath>${env.JAVA_HOME}/lib/tools.jar</systemPath>
			</dependency>
		</dependencies>
	</dependencyManagement>
	
	<build>
		<pluginManagement>
			<plugins>
				<!-- 添加tomcat插件，不用在本地安装tomcat了  -->
				<plugin>
				    <groupId>org.codehaus.mojo</groupId>
				    <artifactId>tomcat-maven-plugin</artifactId>
				    <version>1.1</version>
				    <configuration>
				        <path>/</path><!-- 项目名 -->
				        <port>80</port>
				        <uriEncoding>UTF-8</uriEncoding>
				        <url>http://localhost:80/manager/html</url>
				        <server>tomcat7</server>
				    </configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.1</version>
					<configuration><!-- 指定jdk版本和编码 -->
						<source>1.7</source>
						<target>1.7</target>
						<encoding>UTF-8</encoding>
					</configuration>
				</plugin>
				<!-- 多web聚合时的配置 -->
				<plugin>
	                <groupId>org.apache.maven.plugins</groupId>  
	                <artifactId>maven-war-plugin</artifactId>  
	                <configuration>  
	                    <failOnMissingWebXml>false</failOnMissingWebXml>  
	                </configuration>  
            	</plugin>  
			</plugins>
		</pluginManagement>
		
		<resources>
			<resource>
				<directory>src/main/java</directory>
				<includes>
		        	<include>**/*.properties</include>
		        	<include>**/*.xml</include>
		        </includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
		</resources>
	</build>
</project>